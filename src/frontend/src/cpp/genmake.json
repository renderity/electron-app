{
	"variables":
	{
		"LIBS": "$(ROOT)/libs",
		"REPS": "$(ROOT)/reps",
		"SCALAR_REF_PARAM": "-D \"SCALAR_REF_PARAM(x) = x\""
	},

	"entries":
	{
		"type": "bin",

		"name": "main",

		"include_directories":
		[
			"$(REPS)",
			"$(REPS)/renderity"
		],

		"flags": "$(STD_20) $(NO_LINK) $(VERBOSE) $(OPT_FASTX) $(SSE) $(FLAGS_ADD) -matomics -mbulk-memory $(SCALAR_REF_PARAM)",

		"args_linker": "--max-memory=4294967296",

		"watch_files":
		[
			{
				"file": "$(REPS)/renderity/test/src/main.cpp",

				"watch_files":
				[
					"$(REPS)/renderity/math/src/mat4/mat4.h",
					"$(REPS)/renderity/math/src/orbit/orbit.h",
					"$(REPS)/renderity/math/src/util/util.h",

					"$(REPS)/renderity/aux/src/transition-stack/transition-stack.h",
					"$(REPS)/renderity/aux/src/transition/transition.h",

					"$(REPS)/renderity/wrappers/src/uniform/uniform.h",
					"$(REPS)/renderity/wrappers/src/uniform-block/uniform-block.h",
					"$(REPS)/renderity/wrappers/src/descriptor-set/descriptor-set.h",
					"$(REPS)/renderity/wrappers/src/material/material.h",
					"$(REPS)/renderity/wrappers/src/object/object.h",
					"$(REPS)/renderity/wrappers/src/scene/scene.h"
				]
			},

			{
				"file": "$(REPS)/renderity/math/build/$(ENV)/output/$(LIB_EXT)/math.$(LIB_EXT)",
				"watch_directories": "$(REPS)/renderity/math/src",
				"do": "genmake $(ENV) $(REPS)/renderity/math/genmake.json"
			},

			{
				"file": "$(REPS)/renderity/wrappers/build/$(ENV)/output/$(LIB_EXT)/wrappers.$(LIB_EXT)",
				"watch_files": "$(REPS)/renderity/math/src/_intrin.h",
				"watch_directories": "$(REPS)/renderity/wrappers/src",
				"do": "genmake $(ENV) $(REPS)/renderity/wrappers/genmake.json"
			},

			{
				"file": "$(REPS)/renderity/aux/build/$(ENV)/output/$(LIB_EXT)/aux.$(LIB_EXT)",
				"watch_directories": "$(REPS)/renderity/aux/src",
				"do": "genmake $(ENV) $(REPS)/renderity/aux/genmake.json"
			},

			"$(REPS)/renderity/wasm-wrapper/src/aux.cpp",

			{
				"file": "$(REPS)/renderity/wasm-wrapper/src/set-stack-pointer-$(ARCH).s",

				"flags": "$(NO_LINK)"
			}
		]
	}
}
